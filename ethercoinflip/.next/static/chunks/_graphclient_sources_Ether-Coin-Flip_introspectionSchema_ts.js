"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(self["webpackChunk_N_E"] = self["webpackChunk_N_E"] || []).push([["_graphclient_sources_Ether-Coin-Flip_introspectionSchema_ts"],{

/***/ "./.graphclient/sources/Ether-Coin-Flip/introspectionSchema.ts":
/*!*********************************************************************!*\
  !*** ./.graphclient/sources/Ether-Coin-Flip/introspectionSchema.ts ***!
  \*********************************************************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var graphql__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! graphql */ \"./node_modules/graphql/index.mjs\");\n// @ts-nocheck\n\nvar schemaAST = {\n    \"kind\": \"Document\",\n    \"definitions\": [\n        {\n            \"kind\": \"SchemaDefinition\",\n            \"operationTypes\": [\n                {\n                    \"kind\": \"OperationTypeDefinition\",\n                    \"operation\": \"query\",\n                    \"type\": {\n                        \"kind\": \"NamedType\",\n                        \"name\": {\n                            \"kind\": \"Name\",\n                            \"value\": \"Query\"\n                        }\n                    }\n                },\n                {\n                    \"kind\": \"OperationTypeDefinition\",\n                    \"operation\": \"subscription\",\n                    \"type\": {\n                        \"kind\": \"NamedType\",\n                        \"name\": {\n                            \"kind\": \"Name\",\n                            \"value\": \"Subscription\"\n                        }\n                    }\n                }\n            ],\n            \"directives\": []\n        },\n        {\n            \"kind\": \"DirectiveDefinition\",\n            \"description\": {\n                \"kind\": \"StringValue\",\n                \"value\": \"Marks the GraphQL type as indexable entity.  Each type that should be an entity is required to be annotated with this directive.\"\n            },\n            \"name\": {\n                \"kind\": \"Name\",\n                \"value\": \"entity\"\n            },\n            \"arguments\": [],\n            \"repeatable\": false,\n            \"locations\": [\n                {\n                    \"kind\": \"Name\",\n                    \"value\": \"OBJECT\"\n                }\n            ]\n        },\n        {\n            \"kind\": \"DirectiveDefinition\",\n            \"description\": {\n                \"kind\": \"StringValue\",\n                \"value\": \"Defined a Subgraph ID for an object type\"\n            },\n            \"name\": {\n                \"kind\": \"Name\",\n                \"value\": \"subgraphId\"\n            },\n            \"arguments\": [\n                {\n                    \"kind\": \"InputValueDefinition\",\n                    \"name\": {\n                        \"kind\": \"Name\",\n                        \"value\": \"id\"\n                    },\n                    \"type\": {\n                        \"kind\": \"NonNullType\",\n                        \"type\": {\n                            \"kind\": \"NamedType\",\n                            \"name\": {\n                                \"kind\": \"Name\",\n                                \"value\": \"String\"\n                            }\n                        }\n                    },\n                    \"directives\": []\n                }\n            ],\n            \"repeatable\": false,\n            \"locations\": [\n                {\n                    \"kind\": \"Name\",\n                    \"value\": \"OBJECT\"\n                }\n            ]\n        },\n        {\n            \"kind\": \"DirectiveDefinition\",\n            \"description\": {\n                \"kind\": \"StringValue\",\n                \"value\": \"creates a virtual field on the entity that may be queried but cannot be set manually through the mappings API.\"\n            },\n            \"name\": {\n                \"kind\": \"Name\",\n                \"value\": \"derivedFrom\"\n            },\n            \"arguments\": [\n                {\n                    \"kind\": \"InputValueDefinition\",\n                    \"name\": {\n                        \"kind\": \"Name\",\n                        \"value\": \"field\"\n                    },\n                    \"type\": {\n                        \"kind\": \"NonNullType\",\n                        \"type\": {\n                            \"kind\": \"NamedType\",\n                            \"name\": {\n                                \"kind\": \"Name\",\n                                \"value\": \"String\"\n                            }\n                        }\n                    },\n                    \"directives\": []\n                }\n            ],\n            \"repeatable\": false,\n            \"locations\": [\n                {\n                    \"kind\": \"Name\",\n                    \"value\": \"FIELD_DEFINITION\"\n                }\n            ]\n        },\n        {\n            \"kind\": \"ScalarTypeDefinition\",\n            \"name\": {\n                \"kind\": \"Name\",\n                \"value\": \"BigDecimal\"\n            },\n            \"directives\": []\n        },\n        {\n            \"kind\": \"ScalarTypeDefinition\",\n            \"name\": {\n                \"kind\": \"Name\",\n                \"value\": \"BigInt\"\n            },\n            \"directives\": []\n        },\n        {\n            \"kind\": \"InputObjectTypeDefinition\",\n            \"name\": {\n                \"kind\": \"Name\",\n                \"value\": \"BlockChangedFilter\"\n            },\n            \"fields\": [\n                {\n                    \"kind\": \"InputValueDefinition\",\n                    \"name\": {\n                        \"kind\": \"Name\",\n                        \"value\": \"number_gte\"\n                    },\n                    \"type\": {\n                        \"kind\": \"NonNullType\",\n                        \"type\": {\n                            \"kind\": \"NamedType\",\n                            \"name\": {\n                                \"kind\": \"Name\",\n                                \"value\": \"Int\"\n                            }\n                        }\n                    },\n                    \"directives\": []\n                }\n            ],\n            \"directives\": []\n        },\n        {\n            \"kind\": \"InputObjectTypeDefinition\",\n            \"name\": {\n                \"kind\": \"Name\",\n                \"value\": \"Block_height\"\n            },\n            \"fields\": [\n                {\n                    \"kind\": \"InputValueDefinition\",\n                    \"name\": {\n                        \"kind\": \"Name\",\n                        \"value\": \"hash\"\n                    },\n                    \"type\": {\n                        \"kind\": \"NamedType\",\n                        \"name\": {\n                            \"kind\": \"Name\",\n                            \"value\": \"Bytes\"\n                        }\n                    },\n                    \"directives\": []\n                },\n                {\n                    \"kind\": \"InputValueDefinition\",\n                    \"name\": {\n                        \"kind\": \"Name\",\n                        \"value\": \"number\"\n                    },\n                    \"type\": {\n                        \"kind\": \"NamedType\",\n                        \"name\": {\n                            \"kind\": \"Name\",\n                            \"value\": \"Int\"\n                        }\n                    },\n                    \"directives\": []\n                },\n                {\n                    \"kind\": \"InputValueDefinition\",\n                    \"name\": {\n                        \"kind\": \"Name\",\n                        \"value\": \"number_gte\"\n                    },\n                    \"type\": {\n                        \"kind\": \"NamedType\",\n                        \"name\": {\n                            \"kind\": \"Name\",\n                            \"value\": \"Int\"\n                        }\n                    },\n                    \"directives\": []\n                }\n            ],\n            \"directives\": []\n        },\n        {\n            \"kind\": \"ScalarTypeDefinition\",\n            \"name\": {\n                \"kind\": \"Name\",\n                \"value\": \"Bytes\"\n            },\n            \"directives\": []\n        },\n        {\n            \"kind\": \"EnumTypeDefinition\",\n            \"description\": {\n                \"kind\": \"StringValue\",\n                \"value\": \"Defines the order direction, either ascending or descending\",\n                \"block\": true\n            },\n            \"name\": {\n                \"kind\": \"Name\",\n                \"value\": \"OrderDirection\"\n            },\n            \"values\": [\n                {\n                    \"kind\": \"EnumValueDefinition\",\n                    \"name\": {\n                        \"kind\": \"Name\",\n                        \"value\": \"asc\"\n                    },\n                    \"directives\": []\n                },\n                {\n                    \"kind\": \"EnumValueDefinition\",\n                    \"name\": {\n                        \"kind\": \"Name\",\n                        \"value\": \"desc\"\n                    },\n                    \"directives\": []\n                }\n            ],\n            \"directives\": []\n        },\n        {\n            \"kind\": \"ObjectTypeDefinition\",\n            \"name\": {\n                \"kind\": \"Name\",\n                \"value\": \"Query\"\n            },\n            \"fields\": [\n                {\n                    \"kind\": \"FieldDefinition\",\n                    \"name\": {\n                        \"kind\": \"Name\",\n                        \"value\": \"finishedCoinFlip\"\n                    },\n                    \"arguments\": [\n                        {\n                            \"kind\": \"InputValueDefinition\",\n                            \"name\": {\n                                \"kind\": \"Name\",\n                                \"value\": \"id\"\n                            },\n                            \"type\": {\n                                \"kind\": \"NonNullType\",\n                                \"type\": {\n                                    \"kind\": \"NamedType\",\n                                    \"name\": {\n                                        \"kind\": \"Name\",\n                                        \"value\": \"ID\"\n                                    }\n                                }\n                            },\n                            \"directives\": []\n                        },\n                        {\n                            \"kind\": \"InputValueDefinition\",\n                            \"description\": {\n                                \"kind\": \"StringValue\",\n                                \"value\": \"The block at which the query should be executed. Can either be a `{ hash: Bytes }` value containing a block hash, a `{ number: Int }` containing the block number, or a `{ number_gte: Int }` containing the minimum block number. In the case of `number_gte`, the query will be executed on the latest block only if the subgraph has progressed to or past the minimum block number. Defaults to the latest block when omitted.\",\n                                \"block\": true\n                            },\n                            \"name\": {\n                                \"kind\": \"Name\",\n                                \"value\": \"block\"\n                            },\n                            \"type\": {\n                                \"kind\": \"NamedType\",\n                                \"name\": {\n                                    \"kind\": \"Name\",\n                                    \"value\": \"Block_height\"\n                                }\n                            },\n                            \"directives\": []\n                        },\n                        {\n                            \"kind\": \"InputValueDefinition\",\n                            \"description\": {\n                                \"kind\": \"StringValue\",\n                                \"value\": \"Set to `allow` to receive data even if the subgraph has skipped over errors while syncing.\",\n                                \"block\": true\n                            },\n                            \"name\": {\n                                \"kind\": \"Name\",\n                                \"value\": \"subgraphError\"\n                            },\n                            \"type\": {\n                                \"kind\": \"NonNullType\",\n                                \"type\": {\n                                    \"kind\": \"NamedType\",\n                                    \"name\": {\n                                        \"kind\": \"Name\",\n                                        \"value\": \"_SubgraphErrorPolicy_\"\n                                    }\n                                }\n                            },\n                            \"defaultValue\": {\n                                \"kind\": \"EnumValue\",\n                                \"value\": \"deny\"\n                            },\n                            \"directives\": []\n                        }\n                    ],\n                    \"type\": {\n                        \"kind\": \"NamedType\",\n                        \"name\": {\n                            \"kind\": \"Name\",\n                            \"value\": \"finishedCoinFlip\"\n                        }\n                    },\n                    \"directives\": []\n                },\n                {\n                    \"kind\": \"FieldDefinition\",\n                    \"name\": {\n                        \"kind\": \"Name\",\n                        \"value\": \"finishedCoinFlips\"\n                    },\n                    \"arguments\": [\n                        {\n                            \"kind\": \"InputValueDefinition\",\n                            \"name\": {\n                                \"kind\": \"Name\",\n                                \"value\": \"skip\"\n                            },\n                            \"type\": {\n                                \"kind\": \"NamedType\",\n                                \"name\": {\n                                    \"kind\": \"Name\",\n                                    \"value\": \"Int\"\n                                }\n                            },\n                            \"defaultValue\": {\n                                \"kind\": \"IntValue\",\n                                \"value\": \"0\"\n                            },\n                            \"directives\": []\n                        },\n                        {\n                            \"kind\": \"InputValueDefinition\",\n                            \"name\": {\n                                \"kind\": \"Name\",\n                                \"value\": \"first\"\n                            },\n                            \"type\": {\n                                \"kind\": \"NamedType\",\n                                \"name\": {\n                                    \"kind\": \"Name\",\n                                    \"value\": \"Int\"\n                                }\n                            },\n                            \"defaultValue\": {\n                                \"kind\": \"IntValue\",\n                                \"value\": \"100\"\n                            },\n                            \"directives\": []\n                        },\n                        {\n                            \"kind\": \"InputValueDefinition\",\n                            \"name\": {\n                                \"kind\": \"Name\",\n                                \"value\": \"orderBy\"\n                            },\n                            \"type\": {\n                                \"kind\": \"NamedType\",\n                                \"name\": {\n                                    \"kind\": \"Name\",\n                                    \"value\": \"finishedCoinFlip_orderBy\"\n                                }\n                            },\n                            \"directives\": []\n                        },\n                        {\n                            \"kind\": \"InputValueDefinition\",\n                            \"name\": {\n                                \"kind\": \"Name\",\n                                \"value\": \"orderDirection\"\n                            },\n                            \"type\": {\n                                \"kind\": \"NamedType\",\n                                \"name\": {\n                                    \"kind\": \"Name\",\n                                    \"value\": \"OrderDirection\"\n                                }\n                            },\n                            \"directives\": []\n                        },\n                        {\n                            \"kind\": \"InputValueDefinition\",\n                            \"name\": {\n                                \"kind\": \"Name\",\n                                \"value\": \"where\"\n                            },\n                            \"type\": {\n                                \"kind\": \"NamedType\",\n                                \"name\": {\n                                    \"kind\": \"Name\",\n                                    \"value\": \"finishedCoinFlip_filter\"\n                                }\n                            },\n                            \"directives\": []\n                        },\n                        {\n                            \"kind\": \"InputValueDefinition\",\n                            \"description\": {\n                                \"kind\": \"StringValue\",\n                                \"value\": \"The block at which the query should be executed. Can either be a `{ hash: Bytes }` value containing a block hash, a `{ number: Int }` containing the block number, or a `{ number_gte: Int }` containing the minimum block number. In the case of `number_gte`, the query will be executed on the latest block only if the subgraph has progressed to or past the minimum block number. Defaults to the latest block when omitted.\",\n                                \"block\": true\n                            },\n                            \"name\": {\n                                \"kind\": \"Name\",\n                                \"value\": \"block\"\n                            },\n                            \"type\": {\n                                \"kind\": \"NamedType\",\n                                \"name\": {\n                                    \"kind\": \"Name\",\n                                    \"value\": \"Block_height\"\n                                }\n                            },\n                            \"directives\": []\n                        },\n                        {\n                            \"kind\": \"InputValueDefinition\",\n                            \"description\": {\n                                \"kind\": \"StringValue\",\n                                \"value\": \"Set to `allow` to receive data even if the subgraph has skipped over errors while syncing.\",\n                                \"block\": true\n                            },\n                            \"name\": {\n                                \"kind\": \"Name\",\n                                \"value\": \"subgraphError\"\n                            },\n                            \"type\": {\n                                \"kind\": \"NonNullType\",\n                                \"type\": {\n                                    \"kind\": \"NamedType\",\n                                    \"name\": {\n                                        \"kind\": \"Name\",\n                                        \"value\": \"_SubgraphErrorPolicy_\"\n                                    }\n                                }\n                            },\n                            \"defaultValue\": {\n                                \"kind\": \"EnumValue\",\n                                \"value\": \"deny\"\n                            },\n                            \"directives\": []\n                        }\n                    ],\n                    \"type\": {\n                        \"kind\": \"NonNullType\",\n                        \"type\": {\n                            \"kind\": \"ListType\",\n                            \"type\": {\n                                \"kind\": \"NonNullType\",\n                                \"type\": {\n                                    \"kind\": \"NamedType\",\n                                    \"name\": {\n                                        \"kind\": \"Name\",\n                                        \"value\": \"finishedCoinFlip\"\n                                    }\n                                }\n                            }\n                        }\n                    },\n                    \"directives\": []\n                },\n                {\n                    \"kind\": \"FieldDefinition\",\n                    \"name\": {\n                        \"kind\": \"Name\",\n                        \"value\": \"startedCoinfFlip\"\n                    },\n                    \"arguments\": [\n                        {\n                            \"kind\": \"InputValueDefinition\",\n                            \"name\": {\n                                \"kind\": \"Name\",\n                                \"value\": \"id\"\n                            },\n                            \"type\": {\n                                \"kind\": \"NonNullType\",\n                                \"type\": {\n                                    \"kind\": \"NamedType\",\n                                    \"name\": {\n                                        \"kind\": \"Name\",\n                                        \"value\": \"ID\"\n                                    }\n                                }\n                            },\n                            \"directives\": []\n                        },\n                        {\n                            \"kind\": \"InputValueDefinition\",\n                            \"description\": {\n                                \"kind\": \"StringValue\",\n                                \"value\": \"The block at which the query should be executed. Can either be a `{ hash: Bytes }` value containing a block hash, a `{ number: Int }` containing the block number, or a `{ number_gte: Int }` containing the minimum block number. In the case of `number_gte`, the query will be executed on the latest block only if the subgraph has progressed to or past the minimum block number. Defaults to the latest block when omitted.\",\n                                \"block\": true\n                            },\n                            \"name\": {\n                                \"kind\": \"Name\",\n                                \"value\": \"block\"\n                            },\n                            \"type\": {\n                                \"kind\": \"NamedType\",\n                                \"name\": {\n                                    \"kind\": \"Name\",\n                                    \"value\": \"Block_height\"\n                                }\n                            },\n                            \"directives\": []\n                        },\n                        {\n                            \"kind\": \"InputValueDefinition\",\n                            \"description\": {\n                                \"kind\": \"StringValue\",\n                                \"value\": \"Set to `allow` to receive data even if the subgraph has skipped over errors while syncing.\",\n                                \"block\": true\n                            },\n                            \"name\": {\n                                \"kind\": \"Name\",\n                                \"value\": \"subgraphError\"\n                            },\n                            \"type\": {\n                                \"kind\": \"NonNullType\",\n                                \"type\": {\n                                    \"kind\": \"NamedType\",\n                                    \"name\": {\n                                        \"kind\": \"Name\",\n                                        \"value\": \"_SubgraphErrorPolicy_\"\n                                    }\n                                }\n                            },\n                            \"defaultValue\": {\n                                \"kind\": \"EnumValue\",\n                                \"value\": \"deny\"\n                            },\n                            \"directives\": []\n                        }\n                    ],\n                    \"type\": {\n                        \"kind\": \"NamedType\",\n                        \"name\": {\n                            \"kind\": \"Name\",\n                            \"value\": \"startedCoinfFlip\"\n                        }\n                    },\n                    \"directives\": []\n                },\n                {\n                    \"kind\": \"FieldDefinition\",\n                    \"name\": {\n                        \"kind\": \"Name\",\n                        \"value\": \"startedCoinfFlips\"\n                    },\n                    \"arguments\": [\n                        {\n                            \"kind\": \"InputValueDefinition\",\n                            \"name\": {\n                                \"kind\": \"Name\",\n                                \"value\": \"skip\"\n                            },\n                            \"type\": {\n                                \"kind\": \"NamedType\",\n                                \"name\": {\n                                    \"kind\": \"Name\",\n                                    \"value\": \"Int\"\n                                }\n                            },\n                            \"defaultValue\": {\n                                \"kind\": \"IntValue\",\n                                \"value\": \"0\"\n                            },\n                            \"directives\": []\n                        },\n                        {\n                            \"kind\": \"InputValueDefinition\",\n                            \"name\": {\n                                \"kind\": \"Name\",\n                                \"value\": \"first\"\n                            },\n                            \"type\": {\n                                \"kind\": \"NamedType\",\n                                \"name\": {\n                                    \"kind\": \"Name\",\n                                    \"value\": \"Int\"\n                                }\n                            },\n                            \"defaultValue\": {\n                                \"kind\": \"IntValue\",\n                                \"value\": \"100\"\n                            },\n                            \"directives\": []\n                        },\n                        {\n                            \"kind\": \"InputValueDefinition\",\n                            \"name\": {\n                                \"kind\": \"Name\",\n                                \"value\": \"orderBy\"\n                            },\n                            \"type\": {\n                                \"kind\": \"NamedType\",\n                                \"name\": {\n                                    \"kind\": \"Name\",\n                                    \"value\": \"startedCoinfFlip_orderBy\"\n                                }\n                            },\n                            \"directives\": []\n                        },\n                        {\n                            \"kind\": \"InputValueDefinition\",\n                            \"name\": {\n                                \"kind\": \"Name\",\n                                \"value\": \"orderDirection\"\n                            },\n                            \"type\": {\n                                \"kind\": \"NamedType\",\n                                \"name\": {\n                                    \"kind\": \"Name\",\n                                    \"value\": \"OrderDirection\"\n                                }\n                            },\n                            \"directives\": []\n                        },\n                        {\n                            \"kind\": \"InputValueDefinition\",\n                            \"name\": {\n                                \"kind\": \"Name\",\n                                \"value\": \"where\"\n                            },\n                            \"type\": {\n                                \"kind\": \"NamedType\",\n                                \"name\": {\n                                    \"kind\": \"Name\",\n                                    \"value\": \"startedCoinfFlip_filter\"\n                                }\n                            },\n                            \"directives\": []\n                        },\n                        {\n                            \"kind\": \"InputValueDefinition\",\n                            \"description\": {\n                                \"kind\": \"StringValue\",\n                                \"value\": \"The block at which the query should be executed. Can either be a `{ hash: Bytes }` value containing a block hash, a `{ number: Int }` containing the block number, or a `{ number_gte: Int }` containing the minimum block number. In the case of `number_gte`, the query will be executed on the latest block only if the subgraph has progressed to or past the minimum block number. Defaults to the latest block when omitted.\",\n                                \"block\": true\n                            },\n                            \"name\": {\n                                \"kind\": \"Name\",\n                                \"value\": \"block\"\n                            },\n                            \"type\": {\n                                \"kind\": \"NamedType\",\n                                \"name\": {\n                                    \"kind\": \"Name\",\n                                    \"value\": \"Block_height\"\n                                }\n                            },\n                            \"directives\": []\n                        },\n                        {\n                            \"kind\": \"InputValueDefinition\",\n                            \"description\": {\n                                \"kind\": \"StringValue\",\n                                \"value\": \"Set to `allow` to receive data even if the subgraph has skipped over errors while syncing.\",\n                                \"block\": true\n                            },\n                            \"name\": {\n                                \"kind\": \"Name\",\n                                \"value\": \"subgraphError\"\n                            },\n                            \"type\": {\n                                \"kind\": \"NonNullType\",\n                                \"type\": {\n                                    \"kind\": \"NamedType\",\n                                    \"name\": {\n                                        \"kind\": \"Name\",\n                                        \"value\": \"_SubgraphErrorPolicy_\"\n                                    }\n                                }\n                            },\n                            \"defaultValue\": {\n                                \"kind\": \"EnumValue\",\n                                \"value\": \"deny\"\n                            },\n                            \"directives\": []\n                        }\n                    ],\n                    \"type\": {\n                        \"kind\": \"NonNullType\",\n                        \"type\": {\n                            \"kind\": \"ListType\",\n                            \"type\": {\n                                \"kind\": \"NonNullType\",\n                                \"type\": {\n                                    \"kind\": \"NamedType\",\n                                    \"name\": {\n                                        \"kind\": \"Name\",\n                                        \"value\": \"startedCoinfFlip\"\n                                    }\n                                }\n                            }\n                        }\n                    },\n                    \"directives\": []\n                },\n                {\n                    \"kind\": \"FieldDefinition\",\n                    \"description\": {\n                        \"kind\": \"StringValue\",\n                        \"value\": \"Access to subgraph metadata\",\n                        \"block\": true\n                    },\n                    \"name\": {\n                        \"kind\": \"Name\",\n                        \"value\": \"_meta\"\n                    },\n                    \"arguments\": [\n                        {\n                            \"kind\": \"InputValueDefinition\",\n                            \"name\": {\n                                \"kind\": \"Name\",\n                                \"value\": \"block\"\n                            },\n                            \"type\": {\n                                \"kind\": \"NamedType\",\n                                \"name\": {\n                                    \"kind\": \"Name\",\n                                    \"value\": \"Block_height\"\n                                }\n                            },\n                            \"directives\": []\n                        }\n                    ],\n                    \"type\": {\n                        \"kind\": \"NamedType\",\n                        \"name\": {\n                            \"kind\": \"Name\",\n                            \"value\": \"_Meta_\"\n                        }\n                    },\n                    \"directives\": []\n                }\n            ],\n            \"interfaces\": [],\n            \"directives\": []\n        },\n        {\n            \"kind\": \"ObjectTypeDefinition\",\n            \"name\": {\n                \"kind\": \"Name\",\n                \"value\": \"Subscription\"\n            },\n            \"fields\": [\n                {\n                    \"kind\": \"FieldDefinition\",\n                    \"name\": {\n                        \"kind\": \"Name\",\n                        \"value\": \"finishedCoinFlip\"\n                    },\n                    \"arguments\": [\n                        {\n                            \"kind\": \"InputValueDefinition\",\n                            \"name\": {\n                                \"kind\": \"Name\",\n                                \"value\": \"id\"\n                            },\n                            \"type\": {\n                                \"kind\": \"NonNullType\",\n                                \"type\": {\n                                    \"kind\": \"NamedType\",\n                                    \"name\": {\n                                        \"kind\": \"Name\",\n                                        \"value\": \"ID\"\n                                    }\n                                }\n                            },\n                            \"directives\": []\n                        },\n                        {\n                            \"kind\": \"InputValueDefinition\",\n                            \"description\": {\n                                \"kind\": \"StringValue\",\n                                \"value\": \"The block at which the query should be executed. Can either be a `{ hash: Bytes }` value containing a block hash, a `{ number: Int }` containing the block number, or a `{ number_gte: Int }` containing the minimum block number. In the case of `number_gte`, the query will be executed on the latest block only if the subgraph has progressed to or past the minimum block number. Defaults to the latest block when omitted.\",\n                                \"block\": true\n                            },\n                            \"name\": {\n                                \"kind\": \"Name\",\n                                \"value\": \"block\"\n                            },\n                            \"type\": {\n                                \"kind\": \"NamedType\",\n                                \"name\": {\n                                    \"kind\": \"Name\",\n                                    \"value\": \"Block_height\"\n                                }\n                            },\n                            \"directives\": []\n                        },\n                        {\n                            \"kind\": \"InputValueDefinition\",\n                            \"description\": {\n                                \"kind\": \"StringValue\",\n                                \"value\": \"Set to `allow` to receive data even if the subgraph has skipped over errors while syncing.\",\n                                \"block\": true\n                            },\n                            \"name\": {\n                                \"kind\": \"Name\",\n                                \"value\": \"subgraphError\"\n                            },\n                            \"type\": {\n                                \"kind\": \"NonNullType\",\n                                \"type\": {\n                                    \"kind\": \"NamedType\",\n                                    \"name\": {\n                                        \"kind\": \"Name\",\n                                        \"value\": \"_SubgraphErrorPolicy_\"\n                                    }\n                                }\n                            },\n                            \"defaultValue\": {\n                                \"kind\": \"EnumValue\",\n                                \"value\": \"deny\"\n                            },\n                            \"directives\": []\n                        }\n                    ],\n                    \"type\": {\n                        \"kind\": \"NamedType\",\n                        \"name\": {\n                            \"kind\": \"Name\",\n                            \"value\": \"finishedCoinFlip\"\n                        }\n                    },\n                    \"directives\": []\n                },\n                {\n                    \"kind\": \"FieldDefinition\",\n                    \"name\": {\n                        \"kind\": \"Name\",\n                        \"value\": \"finishedCoinFlips\"\n                    },\n                    \"arguments\": [\n                        {\n                            \"kind\": \"InputValueDefinition\",\n                            \"name\": {\n                                \"kind\": \"Name\",\n                                \"value\": \"skip\"\n                            },\n                            \"type\": {\n                                \"kind\": \"NamedType\",\n                                \"name\": {\n                                    \"kind\": \"Name\",\n                                    \"value\": \"Int\"\n                                }\n                            },\n                            \"defaultValue\": {\n                                \"kind\": \"IntValue\",\n                                \"value\": \"0\"\n                            },\n                            \"directives\": []\n                        },\n                        {\n                            \"kind\": \"InputValueDefinition\",\n                            \"name\": {\n                                \"kind\": \"Name\",\n                                \"value\": \"first\"\n                            },\n                            \"type\": {\n                                \"kind\": \"NamedType\",\n                                \"name\": {\n                                    \"kind\": \"Name\",\n                                    \"value\": \"Int\"\n                                }\n                            },\n                            \"defaultValue\": {\n                                \"kind\": \"IntValue\",\n                                \"value\": \"100\"\n                            },\n                            \"directives\": []\n                        },\n                        {\n                            \"kind\": \"InputValueDefinition\",\n                            \"name\": {\n                                \"kind\": \"Name\",\n                                \"value\": \"orderBy\"\n                            },\n                            \"type\": {\n                                \"kind\": \"NamedType\",\n                                \"name\": {\n                                    \"kind\": \"Name\",\n                                    \"value\": \"finishedCoinFlip_orderBy\"\n                                }\n                            },\n                            \"directives\": []\n                        },\n                        {\n                            \"kind\": \"InputValueDefinition\",\n                            \"name\": {\n                                \"kind\": \"Name\",\n                                \"value\": \"orderDirection\"\n                            },\n                            \"type\": {\n                                \"kind\": \"NamedType\",\n                                \"name\": {\n                                    \"kind\": \"Name\",\n                                    \"value\": \"OrderDirection\"\n                                }\n                            },\n                            \"directives\": []\n                        },\n                        {\n                            \"kind\": \"InputValueDefinition\",\n                            \"name\": {\n                                \"kind\": \"Name\",\n                                \"value\": \"where\"\n                            },\n                            \"type\": {\n                                \"kind\": \"NamedType\",\n                                \"name\": {\n                                    \"kind\": \"Name\",\n                                    \"value\": \"finishedCoinFlip_filter\"\n                                }\n                            },\n                            \"directives\": []\n                        },\n                        {\n                            \"kind\": \"InputValueDefinition\",\n                            \"description\": {\n                                \"kind\": \"StringValue\",\n                                \"value\": \"The block at which the query should be executed. Can either be a `{ hash: Bytes }` value containing a block hash, a `{ number: Int }` containing the block number, or a `{ number_gte: Int }` containing the minimum block number. In the case of `number_gte`, the query will be executed on the latest block only if the subgraph has progressed to or past the minimum block number. Defaults to the latest block when omitted.\",\n                                \"block\": true\n                            },\n                            \"name\": {\n                                \"kind\": \"Name\",\n                                \"value\": \"block\"\n                            },\n                            \"type\": {\n                                \"kind\": \"NamedType\",\n                                \"name\": {\n                                    \"kind\": \"Name\",\n                                    \"value\": \"Block_height\"\n                                }\n                            },\n                            \"directives\": []\n                        },\n                        {\n                            \"kind\": \"InputValueDefinition\",\n                            \"description\": {\n                                \"kind\": \"StringValue\",\n                                \"value\": \"Set to `allow` to receive data even if the subgraph has skipped over errors while syncing.\",\n                                \"block\": true\n                            },\n                            \"name\": {\n                                \"kind\": \"Name\",\n                                \"value\": \"subgraphError\"\n                            },\n                            \"type\": {\n                                \"kind\": \"NonNullType\",\n                                \"type\": {\n                                    \"kind\": \"NamedType\",\n                                    \"name\": {\n                                        \"kind\": \"Name\",\n                                        \"value\": \"_SubgraphErrorPolicy_\"\n                                    }\n                                }\n                            },\n                            \"defaultValue\": {\n                                \"kind\": \"EnumValue\",\n                                \"value\": \"deny\"\n                            },\n                            \"directives\": []\n                        }\n                    ],\n                    \"type\": {\n                        \"kind\": \"NonNullType\",\n                        \"type\": {\n                            \"kind\": \"ListType\",\n                            \"type\": {\n                                \"kind\": \"NonNullType\",\n                                \"type\": {\n                                    \"kind\": \"NamedType\",\n                                    \"name\": {\n                                        \"kind\": \"Name\",\n                                        \"value\": \"finishedCoinFlip\"\n                                    }\n                                }\n                            }\n                        }\n                    },\n                    \"directives\": []\n                },\n                {\n                    \"kind\": \"FieldDefinition\",\n                    \"name\": {\n                        \"kind\": \"Name\",\n                        \"value\": \"startedCoinfFlip\"\n                    },\n                    \"arguments\": [\n                        {\n                            \"kind\": \"InputValueDefinition\",\n                            \"name\": {\n                                \"kind\": \"Name\",\n                                \"value\": \"id\"\n                            },\n                            \"type\": {\n                                \"kind\": \"NonNullType\",\n                                \"type\": {\n                                    \"kind\": \"NamedType\",\n                                    \"name\": {\n                                        \"kind\": \"Name\",\n                                        \"value\": \"ID\"\n                                    }\n                                }\n                            },\n                            \"directives\": []\n                        },\n                        {\n                            \"kind\": \"InputValueDefinition\",\n                            \"description\": {\n                                \"kind\": \"StringValue\",\n                                \"value\": \"The block at which the query should be executed. Can either be a `{ hash: Bytes }` value containing a block hash, a `{ number: Int }` containing the block number, or a `{ number_gte: Int }` containing the minimum block number. In the case of `number_gte`, the query will be executed on the latest block only if the subgraph has progressed to or past the minimum block number. Defaults to the latest block when omitted.\",\n                                \"block\": true\n                            },\n                            \"name\": {\n                                \"kind\": \"Name\",\n                                \"value\": \"block\"\n                            },\n                            \"type\": {\n                                \"kind\": \"NamedType\",\n                                \"name\": {\n                                    \"kind\": \"Name\",\n                                    \"value\": \"Block_height\"\n                                }\n                            },\n                            \"directives\": []\n                        },\n                        {\n                            \"kind\": \"InputValueDefinition\",\n                            \"description\": {\n                                \"kind\": \"StringValue\",\n                                \"value\": \"Set to `allow` to receive data even if the subgraph has skipped over errors while syncing.\",\n                                \"block\": true\n                            },\n                            \"name\": {\n                                \"kind\": \"Name\",\n                                \"value\": \"subgraphError\"\n                            },\n                            \"type\": {\n                                \"kind\": \"NonNullType\",\n                                \"type\": {\n                                    \"kind\": \"NamedType\",\n                                    \"name\": {\n                                        \"kind\": \"Name\",\n                                        \"value\": \"_SubgraphErrorPolicy_\"\n                                    }\n                                }\n                            },\n                            \"defaultValue\": {\n                                \"kind\": \"EnumValue\",\n                                \"value\": \"deny\"\n                            },\n                            \"directives\": []\n                        }\n                    ],\n                    \"type\": {\n                        \"kind\": \"NamedType\",\n                        \"name\": {\n                            \"kind\": \"Name\",\n                            \"value\": \"startedCoinfFlip\"\n                        }\n                    },\n                    \"directives\": []\n                },\n                {\n                    \"kind\": \"FieldDefinition\",\n                    \"name\": {\n                        \"kind\": \"Name\",\n                        \"value\": \"startedCoinfFlips\"\n                    },\n                    \"arguments\": [\n                        {\n                            \"kind\": \"InputValueDefinition\",\n                            \"name\": {\n                                \"kind\": \"Name\",\n                                \"value\": \"skip\"\n                            },\n                            \"type\": {\n                                \"kind\": \"NamedType\",\n                                \"name\": {\n                                    \"kind\": \"Name\",\n                                    \"value\": \"Int\"\n                                }\n                            },\n                            \"defaultValue\": {\n                                \"kind\": \"IntValue\",\n                                \"value\": \"0\"\n                            },\n                            \"directives\": []\n                        },\n                        {\n                            \"kind\": \"InputValueDefinition\",\n                            \"name\": {\n                                \"kind\": \"Name\",\n                                \"value\": \"first\"\n                            },\n                            \"type\": {\n                                \"kind\": \"NamedType\",\n                                \"name\": {\n                                    \"kind\": \"Name\",\n                                    \"value\": \"Int\"\n                                }\n                            },\n                            \"defaultValue\": {\n                                \"kind\": \"IntValue\",\n                                \"value\": \"100\"\n                            },\n                            \"directives\": []\n                        },\n                        {\n                            \"kind\": \"InputValueDefinition\",\n                            \"name\": {\n                                \"kind\": \"Name\",\n                                \"value\": \"orderBy\"\n                            },\n                            \"type\": {\n                                \"kind\": \"NamedType\",\n                                \"name\": {\n                                    \"kind\": \"Name\",\n                                    \"value\": \"startedCoinfFlip_orderBy\"\n                                }\n                            },\n                            \"directives\": []\n                        },\n                        {\n                            \"kind\": \"InputValueDefinition\",\n                            \"name\": {\n                                \"kind\": \"Name\",\n                                \"value\": \"orderDirection\"\n                            },\n                            \"type\": {\n                                \"kind\": \"NamedType\",\n                                \"name\": {\n                                    \"kind\": \"Name\",\n                                    \"value\": \"OrderDirection\"\n                                }\n                            },\n                            \"directives\": []\n                        },\n                        {\n                            \"kind\": \"InputValueDefinition\",\n                            \"name\": {\n                                \"kind\": \"Name\",\n                                \"value\": \"where\"\n                            },\n                            \"type\": {\n                                \"kind\": \"NamedType\",\n                                \"name\": {\n                                    \"kind\": \"Name\",\n                                    \"value\": \"startedCoinfFlip_filter\"\n                                }\n                            },\n                            \"directives\": []\n                        },\n                        {\n                            \"kind\": \"InputValueDefinition\",\n                            \"description\": {\n                                \"kind\": \"StringValue\",\n                                \"value\": \"The block at which the query should be executed. Can either be a `{ hash: Bytes }` value containing a block hash, a `{ number: Int }` containing the block number, or a `{ number_gte: Int }` containing the minimum block number. In the case of `number_gte`, the query will be executed on the latest block only if the subgraph has progressed to or past the minimum block number. Defaults to the latest block when omitted.\",\n                                \"block\": true\n                            },\n                            \"name\": {\n                                \"kind\": \"Name\",\n                                \"value\": \"block\"\n                            },\n                            \"type\": {\n                                \"kind\": \"NamedType\",\n                                \"name\": {\n                                    \"kind\": \"Name\",\n                                    \"value\": \"Block_height\"\n                                }\n                            },\n                            \"directives\": []\n                        },\n                        {\n                            \"kind\": \"InputValueDefinition\",\n                            \"description\": {\n                                \"kind\": \"StringValue\",\n                                \"value\": \"Set to `allow` to receive data even if the subgraph has skipped over errors while syncing.\",\n                                \"block\": true\n                            },\n                            \"name\": {\n                                \"kind\": \"Name\",\n                                \"value\": \"subgraphError\"\n                            },\n                            \"type\": {\n                                \"kind\": \"NonNullType\",\n                                \"type\": {\n                                    \"kind\": \"NamedType\",\n                                    \"name\": {\n                                        \"kind\": \"Name\",\n                                        \"value\": \"_SubgraphErrorPolicy_\"\n                                    }\n                                }\n                            },\n                            \"defaultValue\": {\n                                \"kind\": \"EnumValue\",\n                                \"value\": \"deny\"\n                            },\n                            \"directives\": []\n                        }\n                    ],\n                    \"type\": {\n                        \"kind\": \"NonNullType\",\n                        \"type\": {\n                            \"kind\": \"ListType\",\n                            \"type\": {\n                                \"kind\": \"NonNullType\",\n                                \"type\": {\n                                    \"kind\": \"NamedType\",\n                                    \"name\": {\n                                        \"kind\": \"Name\",\n                                        \"value\": \"startedCoinfFlip\"\n                                    }\n                                }\n                            }\n                        }\n                    },\n                    \"directives\": []\n                },\n                {\n                    \"kind\": \"FieldDefinition\",\n                    \"description\": {\n                        \"kind\": \"StringValue\",\n                        \"value\": \"Access to subgraph metadata\",\n                        \"block\": true\n                    },\n                    \"name\": {\n                        \"kind\": \"Name\",\n                        \"value\": \"_meta\"\n                    },\n                    \"arguments\": [\n                        {\n                            \"kind\": \"InputValueDefinition\",\n                            \"name\": {\n                                \"kind\": \"Name\",\n                                \"value\": \"block\"\n                            },\n                            \"type\": {\n                                \"kind\": \"NamedType\",\n                                \"name\": {\n                                    \"kind\": \"Name\",\n                                    \"value\": \"Block_height\"\n                                }\n                            },\n                            \"directives\": []\n                        }\n                    ],\n                    \"type\": {\n                        \"kind\": \"NamedType\",\n                        \"name\": {\n                            \"kind\": \"Name\",\n                            \"value\": \"_Meta_\"\n                        }\n                    },\n                    \"directives\": []\n                }\n            ],\n            \"interfaces\": [],\n            \"directives\": []\n        },\n        {\n            \"kind\": \"ObjectTypeDefinition\",\n            \"name\": {\n                \"kind\": \"Name\",\n                \"value\": \"_Block_\"\n            },\n            \"fields\": [\n                {\n                    \"kind\": \"FieldDefinition\",\n                    \"description\": {\n                        \"kind\": \"StringValue\",\n                        \"value\": \"The hash of the block\",\n                        \"block\": true\n                    },\n                    \"name\": {\n                        \"kind\": \"Name\",\n                        \"value\": \"hash\"\n                    },\n                    \"arguments\": [],\n                    \"type\": {\n                        \"kind\": \"NamedType\",\n                        \"name\": {\n                            \"kind\": \"Name\",\n                            \"value\": \"Bytes\"\n                        }\n                    },\n                    \"directives\": []\n                },\n                {\n                    \"kind\": \"FieldDefinition\",\n                    \"description\": {\n                        \"kind\": \"StringValue\",\n                        \"value\": \"The block number\",\n                        \"block\": true\n                    },\n                    \"name\": {\n                        \"kind\": \"Name\",\n                        \"value\": \"number\"\n                    },\n                    \"arguments\": [],\n                    \"type\": {\n                        \"kind\": \"NonNullType\",\n                        \"type\": {\n                            \"kind\": \"NamedType\",\n                            \"name\": {\n                                \"kind\": \"Name\",\n                                \"value\": \"Int\"\n                            }\n                        }\n                    },\n                    \"directives\": []\n                },\n                {\n                    \"kind\": \"FieldDefinition\",\n                    \"description\": {\n                        \"kind\": \"StringValue\",\n                        \"value\": \"Integer representation of the timestamp stored in blocks for the chain\",\n                        \"block\": true\n                    },\n                    \"name\": {\n                        \"kind\": \"Name\",\n                        \"value\": \"timestamp\"\n                    },\n                    \"arguments\": [],\n                    \"type\": {\n                        \"kind\": \"NamedType\",\n                        \"name\": {\n                            \"kind\": \"Name\",\n                            \"value\": \"Int\"\n                        }\n                    },\n                    \"directives\": []\n                }\n            ],\n            \"interfaces\": [],\n            \"directives\": []\n        },\n        {\n            \"kind\": \"ObjectTypeDefinition\",\n            \"description\": {\n                \"kind\": \"StringValue\",\n                \"value\": \"The type for the top-level _meta field\",\n                \"block\": true\n            },\n            \"name\": {\n                \"kind\": \"Name\",\n                \"value\": \"_Meta_\"\n            },\n            \"fields\": [\n                {\n                    \"kind\": \"FieldDefinition\",\n                    \"description\": {\n                        \"kind\": \"StringValue\",\n                        \"value\": \"Information about a specific subgraph block. The hash of the block\\nwill be null if the _meta field has a block constraint that asks for\\na block number. It will be filled if the _meta field has no block constraint\\nand therefore asks for the latest  block\\n\",\n                        \"block\": true\n                    },\n                    \"name\": {\n                        \"kind\": \"Name\",\n                        \"value\": \"block\"\n                    },\n                    \"arguments\": [],\n                    \"type\": {\n                        \"kind\": \"NonNullType\",\n                        \"type\": {\n                            \"kind\": \"NamedType\",\n                            \"name\": {\n                                \"kind\": \"Name\",\n                                \"value\": \"_Block_\"\n                            }\n                        }\n                    },\n                    \"directives\": []\n                },\n                {\n                    \"kind\": \"FieldDefinition\",\n                    \"description\": {\n                        \"kind\": \"StringValue\",\n                        \"value\": \"The deployment ID\",\n                        \"block\": true\n                    },\n                    \"name\": {\n                        \"kind\": \"Name\",\n                        \"value\": \"deployment\"\n                    },\n                    \"arguments\": [],\n                    \"type\": {\n                        \"kind\": \"NonNullType\",\n                        \"type\": {\n                            \"kind\": \"NamedType\",\n                            \"name\": {\n                                \"kind\": \"Name\",\n                                \"value\": \"String\"\n                            }\n                        }\n                    },\n                    \"directives\": []\n                },\n                {\n                    \"kind\": \"FieldDefinition\",\n                    \"description\": {\n                        \"kind\": \"StringValue\",\n                        \"value\": \"If `true`, the subgraph encountered indexing errors at some past block\",\n                        \"block\": true\n                    },\n                    \"name\": {\n                        \"kind\": \"Name\",\n                        \"value\": \"hasIndexingErrors\"\n                    },\n                    \"arguments\": [],\n                    \"type\": {\n                        \"kind\": \"NonNullType\",\n                        \"type\": {\n                            \"kind\": \"NamedType\",\n                            \"name\": {\n                                \"kind\": \"Name\",\n                                \"value\": \"Boolean\"\n                            }\n                        }\n                    },\n                    \"directives\": []\n                }\n            ],\n            \"interfaces\": [],\n            \"directives\": []\n        },\n        {\n            \"kind\": \"EnumTypeDefinition\",\n            \"name\": {\n                \"kind\": \"Name\",\n                \"value\": \"_SubgraphErrorPolicy_\"\n            },\n            \"values\": [\n                {\n                    \"kind\": \"EnumValueDefinition\",\n                    \"description\": {\n                        \"kind\": \"StringValue\",\n                        \"value\": \"Data will be returned even if the subgraph has indexing errors\",\n                        \"block\": true\n                    },\n                    \"name\": {\n                        \"kind\": \"Name\",\n                        \"value\": \"allow\"\n                    },\n                    \"directives\": []\n                },\n                {\n                    \"kind\": \"EnumValueDefinition\",\n                    \"description\": {\n                        \"kind\": \"StringValue\",\n                        \"value\": \"If the subgraph has indexing errors, data will be omitted. The default.\",\n                        \"block\": true\n                    },\n                    \"name\": {\n                        \"kind\": \"Name\",\n                        \"value\": \"deny\"\n                    },\n                    \"directives\": []\n                }\n            ],\n            \"directives\": []\n        },\n        {\n            \"kind\": \"ObjectTypeDefinition\",\n            \"name\": {\n                \"kind\": \"Name\",\n                \"value\": \"finishedCoinFlip\"\n            },\n            \"fields\": [\n                {\n                    \"kind\": \"FieldDefinition\",\n                    \"name\": {\n                        \"kind\": \"Name\",\n                        \"value\": \"id\"\n                    },\n                    \"arguments\": [],\n                    \"type\": {\n                        \"kind\": \"NonNullType\",\n                        \"type\": {\n                            \"kind\": \"NamedType\",\n                            \"name\": {\n                                \"kind\": \"Name\",\n                                \"value\": \"Bytes\"\n                            }\n                        }\n                    },\n                    \"directives\": []\n                },\n                {\n                    \"kind\": \"FieldDefinition\",\n                    \"name\": {\n                        \"kind\": \"Name\",\n                        \"value\": \"winner\"\n                    },\n                    \"arguments\": [],\n                    \"type\": {\n                        \"kind\": \"NonNullType\",\n                        \"type\": {\n                            \"kind\": \"NamedType\",\n                            \"name\": {\n                                \"kind\": \"Name\",\n                                \"value\": \"Bytes\"\n                            }\n                        }\n                    },\n                    \"directives\": []\n                },\n                {\n                    \"kind\": \"FieldDefinition\",\n                    \"name\": {\n                        \"kind\": \"Name\",\n                        \"value\": \"blockNumber\"\n                    },\n                    \"arguments\": [],\n                    \"type\": {\n                        \"kind\": \"NonNullType\",\n                        \"type\": {\n                            \"kind\": \"NamedType\",\n                            \"name\": {\n                                \"kind\": \"Name\",\n                                \"value\": \"BigInt\"\n                            }\n                        }\n                    },\n                    \"directives\": []\n                },\n                {\n                    \"kind\": \"FieldDefinition\",\n                    \"name\": {\n                        \"kind\": \"Name\",\n                        \"value\": \"blockTimestamp\"\n                    },\n                    \"arguments\": [],\n                    \"type\": {\n                        \"kind\": \"NonNullType\",\n                        \"type\": {\n                            \"kind\": \"NamedType\",\n                            \"name\": {\n                                \"kind\": \"Name\",\n                                \"value\": \"BigInt\"\n                            }\n                        }\n                    },\n                    \"directives\": []\n                },\n                {\n                    \"kind\": \"FieldDefinition\",\n                    \"name\": {\n                        \"kind\": \"Name\",\n                        \"value\": \"transactionHash\"\n                    },\n                    \"arguments\": [],\n                    \"type\": {\n                        \"kind\": \"NonNullType\",\n                        \"type\": {\n                            \"kind\": \"NamedType\",\n                            \"name\": {\n                                \"kind\": \"Name\",\n                                \"value\": \"Bytes\"\n                            }\n                        }\n                    },\n                    \"directives\": []\n                }\n            ],\n            \"interfaces\": [],\n            \"directives\": []\n        },\n        {\n            \"kind\": \"InputObjectTypeDefinition\",\n            \"name\": {\n                \"kind\": \"Name\",\n                \"value\": \"finishedCoinFlip_filter\"\n            },\n            \"fields\": [\n                {\n                    \"kind\": \"InputValueDefinition\",\n                    \"name\": {\n                        \"kind\": \"Name\",\n                        \"value\": \"id\"\n                    },\n                    \"type\": {\n                        \"kind\": \"NamedType\",\n                        \"name\": {\n                            \"kind\": \"Name\",\n                            \"value\": \"Bytes\"\n                        }\n                    },\n                    \"directives\": []\n                },\n                {\n                    \"kind\": \"InputValueDefinition\",\n                    \"name\": {\n                        \"kind\": \"Name\",\n                        \"value\": \"id_not\"\n                    },\n                    \"type\": {\n                        \"kind\": \"NamedType\",\n                        \"name\": {\n                            \"kind\": \"Name\",\n                            \"value\": \"Bytes\"\n                        }\n                    },\n                    \"directives\": []\n                },\n                {\n                    \"kind\": \"InputValueDefinition\",\n                    \"name\": {\n                        \"kind\": \"Name\",\n                        \"value\": \"id_gt\"\n                    },\n                    \"type\": {\n                        \"kind\": \"NamedType\",\n                        \"name\": {\n                            \"kind\": \"Name\",\n                            \"value\": \"Bytes\"\n                        }\n                    },\n                    \"directives\": []\n                },\n                {\n                    \"kind\": \"InputValueDefinition\",\n                    \"name\": {\n                        \"kind\": \"Name\",\n                        \"value\": \"id_lt\"\n                    },\n                    \"type\": {\n                        \"kind\": \"NamedType\",\n                        \"name\": {\n                            \"kind\": \"Name\",\n                            \"value\": \"Bytes\"\n                        }\n                    },\n                    \"directives\": []\n                },\n                {\n                    \"kind\": \"InputValueDefinition\",\n                    \"name\": {\n                        \"kind\": \"Name\",\n                        \"value\": \"id_gte\"\n                    },\n                    \"type\": {\n                        \"kind\": \"NamedType\",\n                        \"name\": {\n                            \"kind\": \"Name\",\n                            \"value\": \"Bytes\"\n                        }\n                    },\n                    \"directives\": []\n                },\n                {\n                    \"kind\": \"InputValueDefinition\",\n                    \"name\": {\n                        \"kind\": \"Name\",\n                        \"value\": \"id_lte\"\n                    },\n                    \"type\": {\n                        \"kind\": \"NamedType\",\n                        \"name\": {\n                            \"kind\": \"Name\",\n                            \"value\": \"Bytes\"\n                        }\n                    },\n                    \"directives\": []\n                },\n                {\n                    \"kind\": \"InputValueDefinition\",\n                    \"name\": {\n                        \"kind\": \"Name\",\n                        \"value\": \"id_in\"\n                    },\n                    \"type\": {\n                        \"kind\": \"ListType\",\n                        \"type\": {\n                            \"kind\": \"NonNullType\",\n                            \"type\": {\n                                \"kind\": \"NamedType\",\n                                \"name\": {\n                                    \"kind\": \"Name\",\n                                    \"value\": \"Bytes\"\n                                }\n                            }\n                        }\n                    },\n                    \"directives\": []\n                },\n                {\n                    \"kind\": \"InputValueDefinition\",\n                    \"name\": {\n                        \"kind\": \"Name\",\n                        \"value\": \"id_not_in\"\n                    },\n                    \"type\": {\n                        \"kind\": \"ListType\",\n                        \"type\": {\n                            \"kind\": \"NonNullType\",\n                            \"type\": {\n                                \"kind\": \"NamedType\",\n                                \"name\": {\n                                    \"kind\": \"Name\",\n                                    \"value\": \"Bytes\"\n                                }\n                            }\n                        }\n                    },\n                    \"directives\": []\n                },\n                {\n                    \"kind\": \"InputValueDefinition\",\n                    \"name\": {\n                        \"kind\": \"Name\",\n                        \"value\": \"id_contains\"\n                    },\n                    \"type\": {\n                        \"kind\": \"NamedType\",\n                        \"name\": {\n                            \"kind\": \"Name\",\n                            \"value\": \"Bytes\"\n                        }\n                    },\n                    \"directives\": []\n                },\n                {\n                    \"kind\": \"InputValueDefinition\",\n                    \"name\": {\n                        \"kind\": \"Name\",\n                        \"value\": \"id_not_contains\"\n                    },\n                    \"type\": {\n                        \"kind\": \"NamedType\",\n                        \"name\": {\n                            \"kind\": \"Name\",\n                            \"value\": \"Bytes\"\n                        }\n                    },\n                    \"directives\": []\n                },\n                {\n                    \"kind\": \"InputValueDefinition\",\n                    \"name\": {\n                        \"kind\": \"Name\",\n                        \"value\": \"winner\"\n                    },\n                    \"type\": {\n                        \"kind\": \"NamedType\",\n                        \"name\": {\n                            \"kind\": \"Name\",\n                            \"value\": \"Bytes\"\n                        }\n                    },\n                    \"directives\": []\n                },\n                {\n                    \"kind\": \"InputValueDefinition\",\n                    \"name\": {\n                        \"kind\": \"Name\",\n                        \"value\": \"winner_not\"\n                    },\n                    \"type\": {\n                        \"kind\": \"NamedType\",\n                        \"name\": {\n                            \"kind\": \"Name\",\n                            \"value\": \"Bytes\"\n                        }\n                    },\n                    \"directives\": []\n                },\n                {\n                    \"kind\": \"InputValueDefinition\",\n                    \"name\": {\n                        \"kind\": \"Name\",\n                        \"value\": \"winner_gt\"\n                    },\n                    \"type\": {\n                        \"kind\": \"NamedType\",\n                        \"name\": {\n                            \"kind\": \"Name\",\n                            \"value\": \"Bytes\"\n                        }\n                    },\n                    \"directives\": []\n                },\n                {\n                    \"kind\": \"InputValueDefinition\",\n                    \"name\": {\n                        \"kind\": \"Name\",\n                        \"value\": \"winner_lt\"\n                    },\n                    \"type\": {\n                        \"kind\": \"NamedType\",\n                        \"name\": {\n                            \"kind\": \"Name\",\n                            \"value\": \"Bytes\"\n                        }\n                    },\n                    \"directives\": []\n                },\n                {\n                    \"kind\": \"InputValueDefinition\",\n                    \"name\": {\n                        \"kind\": \"Name\",\n                        \"value\": \"winner_gte\"\n                    },\n                    \"type\": {\n                        \"kind\": \"NamedType\",\n                        \"name\": {\n                            \"kind\": \"Name\",\n                            \"value\": \"Bytes\"\n                        }\n                    },\n                    \"directives\": []\n                },\n                {\n                    \"kind\": \"InputValueDefinition\",\n                    \"name\": {\n                        \"kind\": \"Name\",\n                        \"value\": \"winner_lte\"\n                    },\n                    \"type\": {\n                        \"kind\": \"NamedType\",\n                        \"name\": {\n                            \"kind\": \"Name\",\n                            \"value\": \"Bytes\"\n                        }\n                    },\n                    \"directives\": []\n                },\n                {\n                    \"kind\": \"InputValueDefinition\",\n                    \"name\": {\n                        \"kind\": \"Name\",\n                        \"value\": \"winner_in\"\n                    },\n                    \"type\": {\n                        \"kind\": \"ListType\",\n                        \"type\": {\n                            \"kind\": \"NonNullType\",\n                            \"type\": {\n                                \"kind\": \"NamedType\",\n                                \"name\": {\n                                    \"kind\": \"Name\",\n                                    \"value\": \"Bytes\"\n                                }\n                            }\n                        }\n                    },\n                    \"directives\": []\n                },\n                {\n                    \"kind\": \"InputValueDefinition\",\n                    \"name\": {\n                        \"kind\": \"Name\",\n                        \"value\": \"winner_not_in\"\n                    },\n                    \"type\": {\n                        \"kind\": \"ListType\",\n                        \"type\": {\n                            \"kind\": \"NonNullType\",\n                            \"type\": {\n                                \"kind\": \"NamedType\",\n                                \"name\": {\n                                    \"kind\": \"Name\",\n                                    \"value\": \"Bytes\"\n                                }\n                            }\n                        }\n                    },\n                    \"directives\": []\n                },\n                {\n                    \"kind\": \"InputValueDefinition\",\n                    \"name\": {\n                        \"kind\": \"Name\",\n                        \"value\": \"winner_contains\"\n                    },\n                    \"type\": {\n                        \"kind\": \"NamedType\",\n                        \"name\": {\n                            \"kind\": \"Name\",\n                            \"value\": \"Bytes\"\n                        }\n                    },\n                    \"directives\": []\n                },\n                {\n                    \"kind\": \"InputValueDefinition\",\n                    \"name\": {\n                        \"kind\": \"Name\",\n                        \"value\": \"winner_not_contains\"\n                    },\n                    \"type\": {\n                        \"kind\": \"NamedType\",\n                        \"name\": {\n                            \"kind\": \"Name\",\n                            \"value\": \"Bytes\"\n                        }\n                    },\n                    \"directives\": []\n                },\n                {\n                    \"kind\": \"InputValueDefinition\",\n                    \"name\": {\n                        \"kind\": \"Name\",\n                        \"value\": \"blockNumber\"\n                    },\n                    \"type\": {\n                        \"kind\": \"NamedType\",\n                        \"name\": {\n                            \"kind\": \"Name\",\n                            \"value\": \"BigInt\"\n                        }\n                    },\n                    \"directives\": []\n                },\n                {\n                    \"kind\": \"InputValueDefinition\",\n                    \"name\": {\n                        \"kind\": \"Name\",\n                        \"value\": \"blockNumber_not\"\n                    },\n                    \"type\": {\n                        \"kind\": \"NamedType\",\n                        \"name\": {\n                            \"kind\": \"Name\",\n                            \"value\": \"BigInt\"\n                        }\n                    },\n                    \"directives\": []\n                },\n                {\n                    \"kind\": \"InputValueDefinition\",\n                    \"name\": {\n                        \"kind\": \"Name\",\n                        \"value\": \"blockNumber_gt\"\n                    },\n                    \"type\": {\n                        \"kind\": \"NamedType\",\n                        \"name\": {\n                            \"kind\": \"Name\",\n                            \"value\": \"BigInt\"\n                        }\n                    },\n                    \"directives\": []\n                },\n                {\n                    \"kind\": \"InputValueDefinition\",\n                    \"name\": {\n                        \"kind\": \"Name\",\n                        \"value\": \"blockNumber_lt\"\n                    },\n                    \"type\": {\n                        \"kind\": \"NamedType\",\n                        \"name\": {\n                            \"kind\": \"Name\",\n                            \"value\": \"BigInt\"\n                        }\n                    },\n                    \"directives\": []\n                },\n                {\n                    \"kind\": \"InputValueDefinition\",\n                    \"name\": {\n                        \"kind\": \"Name\",\n                        \"value\": \"blockNumber_gte\"\n                    },\n                    \"type\": {\n                        \"kind\": \"NamedType\",\n                        \"name\": {\n                            \"kind\": \"Name\",\n                            \"value\": \"BigInt\"\n                        }\n                    },\n                    \"directives\": []\n                },\n                {\n                    \"kind\": \"InputValueDefinition\",\n                    \"name\": {\n                        \"kind\": \"Name\",\n                        \"value\": \"blockNumber_lte\"\n                    },\n                    \"type\": {\n                        \"kind\": \"NamedType\",\n                        \"name\": {\n                            \"kind\": \"Name\",\n                            \"value\": \"BigInt\"\n                        }\n                    },\n                    \"directives\": []\n                },\n                {\n                    \"kind\": \"InputValueDefinition\",\n                    \"name\": {\n                        \"kind\": \"Name\",\n                        \"value\": \"blockNumber_in\"\n                    },\n                    \"type\": {\n                        \"kind\": \"ListType\",\n                        \"type\": {\n                            \"kind\": \"NonNullType\",\n                            \"type\": {\n                                \"kind\": \"NamedType\",\n                                \"name\": {\n                                    \"kind\": \"Name\",\n                                    \"value\": \"BigInt\"\n                                }\n                            }\n                        }\n                    },\n                    \"directives\": []\n                },\n                {\n                    \"kind\": \"InputValueDefinition\",\n                    \"name\": {\n                        \"kind\": \"Name\",\n                        \"value\": \"blockNumber_not_in\"\n                    },\n                    \"type\": {\n                        \"kind\": \"ListType\",\n                        \"type\": {\n                            \"kind\": \"NonNullType\",\n                            \"type\": {\n                                \"kind\": \"NamedType\",\n                                \"name\": {\n                                    \"kind\": \"Name\",\n                                    \"value\": \"BigInt\"\n                                }\n                            }\n                        }\n                    },\n                    \"directives\": []\n                },\n                {\n                    \"kind\": \"InputValueDefinition\",\n                    \"name\": {\n                        \"kind\": \"Name\",\n                        \"value\": \"blockTimestamp\"\n                    },\n                    \"type\": {\n                        \"kind\": \"NamedType\",\n                        \"name\": {\n                            \"kind\": \"Name\",\n                            \"value\": \"BigInt\"\n                        }\n                    },\n                    \"directives\": []\n                },\n                {\n                    \"kind\": \"InputValueDefinition\",\n                    \"name\": {\n                        \"kind\": \"Name\",\n                        \"value\": \"blockTimestamp_not\"\n                    },\n                    \"type\": {\n                        \"kind\": \"NamedType\",\n                        \"name\": {\n                            \"kind\": \"Name\",\n                            \"value\": \"BigInt\"\n                        }\n                    },\n                    \"directives\": []\n                },\n                {\n                    \"kind\": \"InputValueDefinition\",\n                    \"name\": {\n                        \"kind\": \"Name\",\n                        \"value\": \"blockTimestamp_gt\"\n                    },\n                    \"type\": {\n                        \"kind\": \"NamedType\",\n                        \"name\": {\n                            \"kind\": \"Name\",\n                            \"value\": \"BigInt\"\n                        }\n                    },\n                    \"directives\": []\n                },\n                {\n                    \"kind\": \"InputValueDefinition\",\n                    \"name\": {\n                        \"kind\": \"Name\",\n                        \"value\": \"blockTimestamp_lt\"\n                    },\n                    \"type\": {\n                        \"kind\": \"NamedType\",\n                        \"name\": {\n                            \"kind\": \"Name\",\n                            \"value\": \"BigInt\"\n                        }\n                    },\n                    \"directives\": []\n                },\n                {\n                    \"kind\": \"InputValueDefinition\",\n                    \"name\": {\n                        \"kind\": \"Name\",\n                        \"value\": \"blockTimestamp_gte\"\n                    },\n                    \"type\": {\n                        \"kind\": \"NamedType\",\n                        \"name\": {\n                            \"kind\": \"Name\",\n                            \"value\": \"BigInt\"\n                        }\n                    },\n                    \"directives\": []\n                },\n                {\n                    \"kind\": \"InputValueDefinition\",\n                    \"name\": {\n                        \"kind\": \"Name\",\n                        \"value\": \"blockTimestamp_lte\"\n                    },\n                    \"type\": {\n                        \"kind\": \"NamedType\",\n                        \"name\": {\n                            \"kind\": \"Name\",\n                            \"value\": \"BigInt\"\n                        }\n                    },\n                    \"directives\": []\n                },\n                {\n                    \"kind\": \"InputValueDefinition\",\n                    \"name\": {\n                        \"kind\": \"Name\",\n                        \"value\": \"blockTimestamp_in\"\n                    },\n                    \"type\": {\n                        \"kind\": \"ListType\",\n                        \"type\": {\n                            \"kind\": \"NonNullType\",\n                            \"type\": {\n                                \"kind\": \"NamedType\",\n                                \"name\": {\n                                    \"kind\": \"Name\",\n                                    \"value\": \"BigInt\"\n                                }\n                            }\n                        }\n                    },\n                    \"directives\": []\n                },\n                {\n                    \"kind\": \"InputValueDefinition\",\n                    \"name\": {\n                        \"kind\": \"Name\",\n                        \"value\": \"blockTimestamp_not_in\"\n                    },\n                    \"type\": {\n                        \"kind\": \"ListType\",\n                        \"type\": {\n                            \"kind\": \"NonNullType\",\n                            \"type\": {\n                                \"kind\": \"NamedType\",\n                                \"name\": {\n                                    \"kind\": \"Name\",\n                                    \"value\": \"BigInt\"\n                                }\n                            }\n                        }\n                    },\n                    \"directives\": []\n                },\n                {\n                    \"kind\": \"InputValueDefinition\",\n                    \"name\": {\n                        \"kind\": \"Name\",\n                        \"value\": \"transactionHash\"\n                    },\n                    \"type\": {\n                        \"kind\": \"NamedType\",\n                        \"name\": {\n                            \"kind\": \"Name\",\n                            \"value\": \"Bytes\"\n                        }\n                    },\n                    \"directives\": []\n                },\n                {\n                    \"kind\": \"InputValueDefinition\",\n                    \"name\": {\n                        \"kind\": \"Name\",\n                        \"value\": \"transactionHash_not\"\n                    },\n                    \"type\": {\n                        \"kind\": \"NamedType\",\n                        \"name\": {\n                            \"kind\": \"Name\",\n                            \"value\": \"Bytes\"\n                        }\n                    },\n                    \"directives\": []\n                },\n                {\n                    \"kind\": \"InputValueDefinition\",\n                    \"name\": {\n                        \"kind\": \"Name\",\n                        \"value\": \"transactionHash_gt\"\n                    },\n                    \"type\": {\n                        \"kind\": \"NamedType\",\n                        \"name\": {\n                            \"kind\": \"Name\",\n                            \"value\": \"Bytes\"\n                        }\n                    },\n                    \"directives\": []\n                },\n                {\n                    \"kind\": \"InputValueDefinition\",\n                    \"name\": {\n                        \"kind\": \"Name\",\n                        \"value\": \"transactionHash_lt\"\n                    },\n                    \"type\": {\n                        \"kind\": \"NamedType\",\n                        \"name\": {\n                            \"kind\": \"Name\",\n                            \"value\": \"Bytes\"\n                        }\n                    },\n                    \"directives\": []\n                },\n                {\n                    \"kind\": \"InputValueDefinition\",\n                    \"name\": {\n                        \"kind\": \"Name\",\n                        \"value\": \"transactionHash_gte\"\n                    },\n                    \"type\": {\n                        \"kind\": \"NamedType\",\n                        \"name\": {\n                            \"kind\": \"Name\",\n                            \"value\": \"Bytes\"\n                        }\n                    },\n                    \"directives\": []\n                },\n                {\n                    \"kind\": \"InputValueDefinition\",\n                    \"name\": {\n                        \"kind\": \"Name\",\n                        \"value\": \"transactionHash_lte\"\n                    },\n                    \"type\": {\n                        \"kind\": \"NamedType\",\n                        \"name\": {\n                            \"kind\": \"Name\",\n                            \"value\": \"Bytes\"\n                        }\n                    },\n                    \"directives\": []\n                },\n                {\n                    \"kind\": \"InputValueDefinition\",\n                    \"name\": {\n                        \"kind\": \"Name\",\n                        \"value\": \"transactionHash_in\"\n                    },\n                    \"type\": {\n                        \"kind\": \"ListType\",\n                        \"type\": {\n                            \"kind\": \"NonNullType\",\n                            \"type\": {\n                                \"kind\": \"NamedType\",\n                                \"name\": {\n                                    \"kind\": \"Name\",\n                                    \"value\": \"Bytes\"\n                                }\n                            }\n                        }\n                    },\n                    \"directives\": []\n                },\n                {\n                    \"kind\": \"InputValueDefinition\",\n                    \"name\": {\n                        \"kind\": \"Name\",\n                        \"value\": \"transactionHash_not_in\"\n                    },\n                    \"type\": {\n                        \"kind\": \"ListType\",\n                        \"type\": {\n                            \"kind\": \"NonNullType\",\n                            \"type\": {\n                                \"kind\": \"NamedType\",\n                                \"name\": {\n                                    \"kind\": \"Name\",\n                                    \"value\": \"Bytes\"\n                                }\n                            }\n                        }\n                    },\n                    \"directives\": []\n                },\n                {\n                    \"kind\": \"InputValueDefinition\",\n                    \"name\": {\n                        \"kind\": \"Name\",\n                        \"value\": \"transactionHash_contains\"\n                    },\n                    \"type\": {\n                        \"kind\": \"NamedType\",\n                        \"name\": {\n                            \"kind\": \"Name\",\n                            \"value\": \"Bytes\"\n                        }\n                    },\n                    \"directives\": []\n                },\n                {\n                    \"kind\": \"InputValueDefinition\",\n                    \"name\": {\n                        \"kind\": \"Name\",\n                        \"value\": \"transactionHash_not_contains\"\n                    },\n                    \"type\": {\n                        \"kind\": \"NamedType\",\n                        \"name\": {\n                            \"kind\": \"Name\",\n                            \"value\": \"Bytes\"\n                        }\n                    },\n                    \"directives\": []\n                },\n                {\n                    \"kind\": \"InputValueDefinition\",\n                    \"description\": {\n                        \"kind\": \"StringValue\",\n                        \"value\": \"Filter for the block changed event.\",\n                        \"block\": true\n                    },\n                    \"name\": {\n                        \"kind\": \"Name\",\n                        \"value\": \"_change_block\"\n                    },\n                    \"type\": {\n                        \"kind\": \"NamedType\",\n                        \"name\": {\n                            \"kind\": \"Name\",\n                            \"value\": \"BlockChangedFilter\"\n                        }\n                    },\n                    \"directives\": []\n                },\n                {\n                    \"kind\": \"InputValueDefinition\",\n                    \"name\": {\n                        \"kind\": \"Name\",\n                        \"value\": \"and\"\n                    },\n                    \"type\": {\n                        \"kind\": \"ListType\",\n                        \"type\": {\n                            \"kind\": \"NamedType\",\n                            \"name\": {\n                                \"kind\": \"Name\",\n                                \"value\": \"finishedCoinFlip_filter\"\n                            }\n                        }\n                    },\n                    \"directives\": []\n                },\n                {\n                    \"kind\": \"InputValueDefinition\",\n                    \"name\": {\n                        \"kind\": \"Name\",\n                        \"value\": \"or\"\n                    },\n                    \"type\": {\n                        \"kind\": \"ListType\",\n                        \"type\": {\n                            \"kind\": \"NamedType\",\n                            \"name\": {\n                                \"kind\": \"Name\",\n                                \"value\": \"finishedCoinFlip_filter\"\n                            }\n                        }\n                    },\n                    \"directives\": []\n                }\n            ],\n            \"directives\": []\n        },\n        {\n            \"kind\": \"EnumTypeDefinition\",\n            \"name\": {\n                \"kind\": \"Name\",\n                \"value\": \"finishedCoinFlip_orderBy\"\n            },\n            \"values\": [\n                {\n                    \"kind\": \"EnumValueDefinition\",\n                    \"name\": {\n                        \"kind\": \"Name\",\n                        \"value\": \"id\"\n                    },\n                    \"directives\": []\n                },\n                {\n                    \"kind\": \"EnumValueDefinition\",\n                    \"name\": {\n                        \"kind\": \"Name\",\n                        \"value\": \"winner\"\n                    },\n                    \"directives\": []\n                },\n                {\n                    \"kind\": \"EnumValueDefinition\",\n                    \"name\": {\n                        \"kind\": \"Name\",\n                        \"value\": \"blockNumber\"\n                    },\n                    \"directives\": []\n                },\n                {\n                    \"kind\": \"EnumValueDefinition\",\n                    \"name\": {\n                        \"kind\": \"Name\",\n                        \"value\": \"blockTimestamp\"\n                    },\n                    \"directives\": []\n                },\n                {\n                    \"kind\": \"EnumValueDefinition\",\n                    \"name\": {\n                        \"kind\": \"Name\",\n                        \"value\": \"transactionHash\"\n                    },\n                    \"directives\": []\n                }\n            ],\n            \"directives\": []\n        },\n        {\n            \"kind\": \"ObjectTypeDefinition\",\n            \"name\": {\n                \"kind\": \"Name\",\n                \"value\": \"startedCoinfFlip\"\n            },\n            \"fields\": [\n                {\n                    \"kind\": \"FieldDefinition\",\n                    \"name\": {\n                        \"kind\": \"Name\",\n                        \"value\": \"id\"\n                    },\n                    \"arguments\": [],\n                    \"type\": {\n                        \"kind\": \"NonNullType\",\n                        \"type\": {\n                            \"kind\": \"NamedType\",\n                            \"name\": {\n                                \"kind\": \"Name\",\n                                \"value\": \"Bytes\"\n                            }\n                        }\n                    },\n                    \"directives\": []\n                },\n                {\n                    \"kind\": \"FieldDefinition\",\n                    \"name\": {\n                        \"kind\": \"Name\",\n                        \"value\": \"theCoinFlipID\"\n                    },\n                    \"arguments\": [],\n                    \"type\": {\n                        \"kind\": \"NonNullType\",\n                        \"type\": {\n                            \"kind\": \"NamedType\",\n                            \"name\": {\n                                \"kind\": \"Name\",\n                                \"value\": \"BigInt\"\n                            }\n                        }\n                    },\n                    \"directives\": []\n                },\n                {\n                    \"kind\": \"FieldDefinition\",\n                    \"name\": {\n                        \"kind\": \"Name\",\n                        \"value\": \"blockNumber\"\n                    },\n                    \"arguments\": [],\n                    \"type\": {\n                        \"kind\": \"NonNullType\",\n                        \"type\": {\n                            \"kind\": \"NamedType\",\n                            \"name\": {\n                                \"kind\": \"Name\",\n                                \"value\": \"BigInt\"\n                            }\n                        }\n                    },\n                    \"directives\": []\n                },\n                {\n                    \"kind\": \"FieldDefinition\",\n                    \"name\": {\n                        \"kind\": \"Name\",\n                        \"value\": \"blockTimestamp\"\n                    },\n                    \"arguments\": [],\n                    \"type\": {\n                        \"kind\": \"NonNullType\",\n                        \"type\": {\n                            \"kind\": \"NamedType\",\n                            \"name\": {\n                                \"kind\": \"Name\",\n                                \"value\": \"BigInt\"\n                            }\n                        }\n                    },\n                    \"directives\": []\n                },\n                {\n                    \"kind\": \"FieldDefinition\",\n                    \"name\": {\n                        \"kind\": \"Name\",\n                        \"value\": \"transactionHash\"\n                    },\n                    \"arguments\": [],\n                    \"type\": {\n                        \"kind\": \"NonNullType\",\n                        \"type\": {\n                            \"kind\": \"NamedType\",\n                            \"name\": {\n                                \"kind\": \"Name\",\n                                \"value\": \"Bytes\"\n                            }\n                        }\n                    },\n                    \"directives\": []\n                }\n            ],\n            \"interfaces\": [],\n            \"directives\": []\n        },\n        {\n            \"kind\": \"InputObjectTypeDefinition\",\n            \"name\": {\n                \"kind\": \"Name\",\n                \"value\": \"startedCoinfFlip_filter\"\n            },\n            \"fields\": [\n                {\n                    \"kind\": \"InputValueDefinition\",\n                    \"name\": {\n                        \"kind\": \"Name\",\n                        \"value\": \"id\"\n                    },\n                    \"type\": {\n                        \"kind\": \"NamedType\",\n                        \"name\": {\n                            \"kind\": \"Name\",\n                            \"value\": \"Bytes\"\n                        }\n                    },\n                    \"directives\": []\n                },\n                {\n                    \"kind\": \"InputValueDefinition\",\n                    \"name\": {\n                        \"kind\": \"Name\",\n                        \"value\": \"id_not\"\n                    },\n                    \"type\": {\n                        \"kind\": \"NamedType\",\n                        \"name\": {\n                            \"kind\": \"Name\",\n                            \"value\": \"Bytes\"\n                        }\n                    },\n                    \"directives\": []\n                },\n                {\n                    \"kind\": \"InputValueDefinition\",\n                    \"name\": {\n                        \"kind\": \"Name\",\n                        \"value\": \"id_gt\"\n                    },\n                    \"type\": {\n                        \"kind\": \"NamedType\",\n                        \"name\": {\n                            \"kind\": \"Name\",\n                            \"value\": \"Bytes\"\n                        }\n                    },\n                    \"directives\": []\n                },\n                {\n                    \"kind\": \"InputValueDefinition\",\n                    \"name\": {\n                        \"kind\": \"Name\",\n                        \"value\": \"id_lt\"\n                    },\n                    \"type\": {\n                        \"kind\": \"NamedType\",\n                        \"name\": {\n                            \"kind\": \"Name\",\n                            \"value\": \"Bytes\"\n                        }\n                    },\n                    \"directives\": []\n                },\n                {\n                    \"kind\": \"InputValueDefinition\",\n                    \"name\": {\n                        \"kind\": \"Name\",\n                        \"value\": \"id_gte\"\n                    },\n                    \"type\": {\n                        \"kind\": \"NamedType\",\n                        \"name\": {\n                            \"kind\": \"Name\",\n                            \"value\": \"Bytes\"\n                        }\n                    },\n                    \"directives\": []\n                },\n                {\n                    \"kind\": \"InputValueDefinition\",\n                    \"name\": {\n                        \"kind\": \"Name\",\n                        \"value\": \"id_lte\"\n                    },\n                    \"type\": {\n                        \"kind\": \"NamedType\",\n                        \"name\": {\n                            \"kind\": \"Name\",\n                            \"value\": \"Bytes\"\n                        }\n                    },\n                    \"directives\": []\n                },\n                {\n                    \"kind\": \"InputValueDefinition\",\n                    \"name\": {\n                        \"kind\": \"Name\",\n                        \"value\": \"id_in\"\n                    },\n                    \"type\": {\n                        \"kind\": \"ListType\",\n                        \"type\": {\n                            \"kind\": \"NonNullType\",\n                            \"type\": {\n                                \"kind\": \"NamedType\",\n                                \"name\": {\n                                    \"kind\": \"Name\",\n                                    \"value\": \"Bytes\"\n                                }\n                            }\n                        }\n                    },\n                    \"directives\": []\n                },\n                {\n                    \"kind\": \"InputValueDefinition\",\n                    \"name\": {\n                        \"kind\": \"Name\",\n                        \"value\": \"id_not_in\"\n                    },\n                    \"type\": {\n                        \"kind\": \"ListType\",\n                        \"type\": {\n                            \"kind\": \"NonNullType\",\n                            \"type\": {\n                                \"kind\": \"NamedType\",\n                                \"name\": {\n                                    \"kind\": \"Name\",\n                                    \"value\": \"Bytes\"\n                                }\n                            }\n                        }\n                    },\n                    \"directives\": []\n                },\n                {\n                    \"kind\": \"InputValueDefinition\",\n                    \"name\": {\n                        \"kind\": \"Name\",\n                        \"value\": \"id_contains\"\n                    },\n                    \"type\": {\n                        \"kind\": \"NamedType\",\n                        \"name\": {\n                            \"kind\": \"Name\",\n                            \"value\": \"Bytes\"\n                        }\n                    },\n                    \"directives\": []\n                },\n                {\n                    \"kind\": \"InputValueDefinition\",\n                    \"name\": {\n                        \"kind\": \"Name\",\n                        \"value\": \"id_not_contains\"\n                    },\n                    \"type\": {\n                        \"kind\": \"NamedType\",\n                        \"name\": {\n                            \"kind\": \"Name\",\n                            \"value\": \"Bytes\"\n                        }\n                    },\n                    \"directives\": []\n                },\n                {\n                    \"kind\": \"InputValueDefinition\",\n                    \"name\": {\n                        \"kind\": \"Name\",\n                        \"value\": \"theCoinFlipID\"\n                    },\n                    \"type\": {\n                        \"kind\": \"NamedType\",\n                        \"name\": {\n                            \"kind\": \"Name\",\n                            \"value\": \"BigInt\"\n                        }\n                    },\n                    \"directives\": []\n                },\n                {\n                    \"kind\": \"InputValueDefinition\",\n                    \"name\": {\n                        \"kind\": \"Name\",\n                        \"value\": \"theCoinFlipID_not\"\n                    },\n                    \"type\": {\n                        \"kind\": \"NamedType\",\n                        \"name\": {\n                            \"kind\": \"Name\",\n                            \"value\": \"BigInt\"\n                        }\n                    },\n                    \"directives\": []\n                },\n                {\n                    \"kind\": \"InputValueDefinition\",\n                    \"name\": {\n                        \"kind\": \"Name\",\n                        \"value\": \"theCoinFlipID_gt\"\n                    },\n                    \"type\": {\n                        \"kind\": \"NamedType\",\n                        \"name\": {\n                            \"kind\": \"Name\",\n                            \"value\": \"BigInt\"\n                        }\n                    },\n                    \"directives\": []\n                },\n                {\n                    \"kind\": \"InputValueDefinition\",\n                    \"name\": {\n                        \"kind\": \"Name\",\n                        \"value\": \"theCoinFlipID_lt\"\n                    },\n                    \"type\": {\n                        \"kind\": \"NamedType\",\n                        \"name\": {\n                            \"kind\": \"Name\",\n                            \"value\": \"BigInt\"\n                        }\n                    },\n                    \"directives\": []\n                },\n                {\n                    \"kind\": \"InputValueDefinition\",\n                    \"name\": {\n                        \"kind\": \"Name\",\n                        \"value\": \"theCoinFlipID_gte\"\n                    },\n                    \"type\": {\n                        \"kind\": \"NamedType\",\n                        \"name\": {\n                            \"kind\": \"Name\",\n                            \"value\": \"BigInt\"\n                        }\n                    },\n                    \"directives\": []\n                },\n                {\n                    \"kind\": \"InputValueDefinition\",\n                    \"name\": {\n                        \"kind\": \"Name\",\n                        \"value\": \"theCoinFlipID_lte\"\n                    },\n                    \"type\": {\n                        \"kind\": \"NamedType\",\n                        \"name\": {\n                            \"kind\": \"Name\",\n                            \"value\": \"BigInt\"\n                        }\n                    },\n                    \"directives\": []\n                },\n                {\n                    \"kind\": \"InputValueDefinition\",\n                    \"name\": {\n                        \"kind\": \"Name\",\n                        \"value\": \"theCoinFlipID_in\"\n                    },\n                    \"type\": {\n                        \"kind\": \"ListType\",\n                        \"type\": {\n                            \"kind\": \"NonNullType\",\n                            \"type\": {\n                                \"kind\": \"NamedType\",\n                                \"name\": {\n                                    \"kind\": \"Name\",\n                                    \"value\": \"BigInt\"\n                                }\n                            }\n                        }\n                    },\n                    \"directives\": []\n                },\n                {\n                    \"kind\": \"InputValueDefinition\",\n                    \"name\": {\n                        \"kind\": \"Name\",\n                        \"value\": \"theCoinFlipID_not_in\"\n                    },\n                    \"type\": {\n                        \"kind\": \"ListType\",\n                        \"type\": {\n                            \"kind\": \"NonNullType\",\n                            \"type\": {\n                                \"kind\": \"NamedType\",\n                                \"name\": {\n                                    \"kind\": \"Name\",\n                                    \"value\": \"BigInt\"\n                                }\n                            }\n                        }\n                    },\n                    \"directives\": []\n                },\n                {\n                    \"kind\": \"InputValueDefinition\",\n                    \"name\": {\n                        \"kind\": \"Name\",\n                        \"value\": \"blockNumber\"\n                    },\n                    \"type\": {\n                        \"kind\": \"NamedType\",\n                        \"name\": {\n                            \"kind\": \"Name\",\n                            \"value\": \"BigInt\"\n                        }\n                    },\n                    \"directives\": []\n                },\n                {\n                    \"kind\": \"InputValueDefinition\",\n                    \"name\": {\n                        \"kind\": \"Name\",\n                        \"value\": \"blockNumber_not\"\n                    },\n                    \"type\": {\n                        \"kind\": \"NamedType\",\n                        \"name\": {\n                            \"kind\": \"Name\",\n                            \"value\": \"BigInt\"\n                        }\n                    },\n                    \"directives\": []\n                },\n                {\n                    \"kind\": \"InputValueDefinition\",\n                    \"name\": {\n                        \"kind\": \"Name\",\n                        \"value\": \"blockNumber_gt\"\n                    },\n                    \"type\": {\n                        \"kind\": \"NamedType\",\n                        \"name\": {\n                            \"kind\": \"Name\",\n                            \"value\": \"BigInt\"\n                        }\n                    },\n                    \"directives\": []\n                },\n                {\n                    \"kind\": \"InputValueDefinition\",\n                    \"name\": {\n                        \"kind\": \"Name\",\n                        \"value\": \"blockNumber_lt\"\n                    },\n                    \"type\": {\n                        \"kind\": \"NamedType\",\n                        \"name\": {\n                            \"kind\": \"Name\",\n                            \"value\": \"BigInt\"\n                        }\n                    },\n                    \"directives\": []\n                },\n                {\n                    \"kind\": \"InputValueDefinition\",\n                    \"name\": {\n                        \"kind\": \"Name\",\n                        \"value\": \"blockNumber_gte\"\n                    },\n                    \"type\": {\n                        \"kind\": \"NamedType\",\n                        \"name\": {\n                            \"kind\": \"Name\",\n                            \"value\": \"BigInt\"\n                        }\n                    },\n                    \"directives\": []\n                },\n                {\n                    \"kind\": \"InputValueDefinition\",\n                    \"name\": {\n                        \"kind\": \"Name\",\n                        \"value\": \"blockNumber_lte\"\n                    },\n                    \"type\": {\n                        \"kind\": \"NamedType\",\n                        \"name\": {\n                            \"kind\": \"Name\",\n                            \"value\": \"BigInt\"\n                        }\n                    },\n                    \"directives\": []\n                },\n                {\n                    \"kind\": \"InputValueDefinition\",\n                    \"name\": {\n                        \"kind\": \"Name\",\n                        \"value\": \"blockNumber_in\"\n                    },\n                    \"type\": {\n                        \"kind\": \"ListType\",\n                        \"type\": {\n                            \"kind\": \"NonNullType\",\n                            \"type\": {\n                                \"kind\": \"NamedType\",\n                                \"name\": {\n                                    \"kind\": \"Name\",\n                                    \"value\": \"BigInt\"\n                                }\n                            }\n                        }\n                    },\n                    \"directives\": []\n                },\n                {\n                    \"kind\": \"InputValueDefinition\",\n                    \"name\": {\n                        \"kind\": \"Name\",\n                        \"value\": \"blockNumber_not_in\"\n                    },\n                    \"type\": {\n                        \"kind\": \"ListType\",\n                        \"type\": {\n                            \"kind\": \"NonNullType\",\n                            \"type\": {\n                                \"kind\": \"NamedType\",\n                                \"name\": {\n                                    \"kind\": \"Name\",\n                                    \"value\": \"BigInt\"\n                                }\n                            }\n                        }\n                    },\n                    \"directives\": []\n                },\n                {\n                    \"kind\": \"InputValueDefinition\",\n                    \"name\": {\n                        \"kind\": \"Name\",\n                        \"value\": \"blockTimestamp\"\n                    },\n                    \"type\": {\n                        \"kind\": \"NamedType\",\n                        \"name\": {\n                            \"kind\": \"Name\",\n                            \"value\": \"BigInt\"\n                        }\n                    },\n                    \"directives\": []\n                },\n                {\n                    \"kind\": \"InputValueDefinition\",\n                    \"name\": {\n                        \"kind\": \"Name\",\n                        \"value\": \"blockTimestamp_not\"\n                    },\n                    \"type\": {\n                        \"kind\": \"NamedType\",\n                        \"name\": {\n                            \"kind\": \"Name\",\n                            \"value\": \"BigInt\"\n                        }\n                    },\n                    \"directives\": []\n                },\n                {\n                    \"kind\": \"InputValueDefinition\",\n                    \"name\": {\n                        \"kind\": \"Name\",\n                        \"value\": \"blockTimestamp_gt\"\n                    },\n                    \"type\": {\n                        \"kind\": \"NamedType\",\n                        \"name\": {\n                            \"kind\": \"Name\",\n                            \"value\": \"BigInt\"\n                        }\n                    },\n                    \"directives\": []\n                },\n                {\n                    \"kind\": \"InputValueDefinition\",\n                    \"name\": {\n                        \"kind\": \"Name\",\n                        \"value\": \"blockTimestamp_lt\"\n                    },\n                    \"type\": {\n                        \"kind\": \"NamedType\",\n                        \"name\": {\n                            \"kind\": \"Name\",\n                            \"value\": \"BigInt\"\n                        }\n                    },\n                    \"directives\": []\n                },\n                {\n                    \"kind\": \"InputValueDefinition\",\n                    \"name\": {\n                        \"kind\": \"Name\",\n                        \"value\": \"blockTimestamp_gte\"\n                    },\n                    \"type\": {\n                        \"kind\": \"NamedType\",\n                        \"name\": {\n                            \"kind\": \"Name\",\n                            \"value\": \"BigInt\"\n                        }\n                    },\n                    \"directives\": []\n                },\n                {\n                    \"kind\": \"InputValueDefinition\",\n                    \"name\": {\n                        \"kind\": \"Name\",\n                        \"value\": \"blockTimestamp_lte\"\n                    },\n                    \"type\": {\n                        \"kind\": \"NamedType\",\n                        \"name\": {\n                            \"kind\": \"Name\",\n                            \"value\": \"BigInt\"\n                        }\n                    },\n                    \"directives\": []\n                },\n                {\n                    \"kind\": \"InputValueDefinition\",\n                    \"name\": {\n                        \"kind\": \"Name\",\n                        \"value\": \"blockTimestamp_in\"\n                    },\n                    \"type\": {\n                        \"kind\": \"ListType\",\n                        \"type\": {\n                            \"kind\": \"NonNullType\",\n                            \"type\": {\n                                \"kind\": \"NamedType\",\n                                \"name\": {\n                                    \"kind\": \"Name\",\n                                    \"value\": \"BigInt\"\n                                }\n                            }\n                        }\n                    },\n                    \"directives\": []\n                },\n                {\n                    \"kind\": \"InputValueDefinition\",\n                    \"name\": {\n                        \"kind\": \"Name\",\n                        \"value\": \"blockTimestamp_not_in\"\n                    },\n                    \"type\": {\n                        \"kind\": \"ListType\",\n                        \"type\": {\n                            \"kind\": \"NonNullType\",\n                            \"type\": {\n                                \"kind\": \"NamedType\",\n                                \"name\": {\n                                    \"kind\": \"Name\",\n                                    \"value\": \"BigInt\"\n                                }\n                            }\n                        }\n                    },\n                    \"directives\": []\n                },\n                {\n                    \"kind\": \"InputValueDefinition\",\n                    \"name\": {\n                        \"kind\": \"Name\",\n                        \"value\": \"transactionHash\"\n                    },\n                    \"type\": {\n                        \"kind\": \"NamedType\",\n                        \"name\": {\n                            \"kind\": \"Name\",\n                            \"value\": \"Bytes\"\n                        }\n                    },\n                    \"directives\": []\n                },\n                {\n                    \"kind\": \"InputValueDefinition\",\n                    \"name\": {\n                        \"kind\": \"Name\",\n                        \"value\": \"transactionHash_not\"\n                    },\n                    \"type\": {\n                        \"kind\": \"NamedType\",\n                        \"name\": {\n                            \"kind\": \"Name\",\n                            \"value\": \"Bytes\"\n                        }\n                    },\n                    \"directives\": []\n                },\n                {\n                    \"kind\": \"InputValueDefinition\",\n                    \"name\": {\n                        \"kind\": \"Name\",\n                        \"value\": \"transactionHash_gt\"\n                    },\n                    \"type\": {\n                        \"kind\": \"NamedType\",\n                        \"name\": {\n                            \"kind\": \"Name\",\n                            \"value\": \"Bytes\"\n                        }\n                    },\n                    \"directives\": []\n                },\n                {\n                    \"kind\": \"InputValueDefinition\",\n                    \"name\": {\n                        \"kind\": \"Name\",\n                        \"value\": \"transactionHash_lt\"\n                    },\n                    \"type\": {\n                        \"kind\": \"NamedType\",\n                        \"name\": {\n                            \"kind\": \"Name\",\n                            \"value\": \"Bytes\"\n                        }\n                    },\n                    \"directives\": []\n                },\n                {\n                    \"kind\": \"InputValueDefinition\",\n                    \"name\": {\n                        \"kind\": \"Name\",\n                        \"value\": \"transactionHash_gte\"\n                    },\n                    \"type\": {\n                        \"kind\": \"NamedType\",\n                        \"name\": {\n                            \"kind\": \"Name\",\n                            \"value\": \"Bytes\"\n                        }\n                    },\n                    \"directives\": []\n                },\n                {\n                    \"kind\": \"InputValueDefinition\",\n                    \"name\": {\n                        \"kind\": \"Name\",\n                        \"value\": \"transactionHash_lte\"\n                    },\n                    \"type\": {\n                        \"kind\": \"NamedType\",\n                        \"name\": {\n                            \"kind\": \"Name\",\n                            \"value\": \"Bytes\"\n                        }\n                    },\n                    \"directives\": []\n                },\n                {\n                    \"kind\": \"InputValueDefinition\",\n                    \"name\": {\n                        \"kind\": \"Name\",\n                        \"value\": \"transactionHash_in\"\n                    },\n                    \"type\": {\n                        \"kind\": \"ListType\",\n                        \"type\": {\n                            \"kind\": \"NonNullType\",\n                            \"type\": {\n                                \"kind\": \"NamedType\",\n                                \"name\": {\n                                    \"kind\": \"Name\",\n                                    \"value\": \"Bytes\"\n                                }\n                            }\n                        }\n                    },\n                    \"directives\": []\n                },\n                {\n                    \"kind\": \"InputValueDefinition\",\n                    \"name\": {\n                        \"kind\": \"Name\",\n                        \"value\": \"transactionHash_not_in\"\n                    },\n                    \"type\": {\n                        \"kind\": \"ListType\",\n                        \"type\": {\n                            \"kind\": \"NonNullType\",\n                            \"type\": {\n                                \"kind\": \"NamedType\",\n                                \"name\": {\n                                    \"kind\": \"Name\",\n                                    \"value\": \"Bytes\"\n                                }\n                            }\n                        }\n                    },\n                    \"directives\": []\n                },\n                {\n                    \"kind\": \"InputValueDefinition\",\n                    \"name\": {\n                        \"kind\": \"Name\",\n                        \"value\": \"transactionHash_contains\"\n                    },\n                    \"type\": {\n                        \"kind\": \"NamedType\",\n                        \"name\": {\n                            \"kind\": \"Name\",\n                            \"value\": \"Bytes\"\n                        }\n                    },\n                    \"directives\": []\n                },\n                {\n                    \"kind\": \"InputValueDefinition\",\n                    \"name\": {\n                        \"kind\": \"Name\",\n                        \"value\": \"transactionHash_not_contains\"\n                    },\n                    \"type\": {\n                        \"kind\": \"NamedType\",\n                        \"name\": {\n                            \"kind\": \"Name\",\n                            \"value\": \"Bytes\"\n                        }\n                    },\n                    \"directives\": []\n                },\n                {\n                    \"kind\": \"InputValueDefinition\",\n                    \"description\": {\n                        \"kind\": \"StringValue\",\n                        \"value\": \"Filter for the block changed event.\",\n                        \"block\": true\n                    },\n                    \"name\": {\n                        \"kind\": \"Name\",\n                        \"value\": \"_change_block\"\n                    },\n                    \"type\": {\n                        \"kind\": \"NamedType\",\n                        \"name\": {\n                            \"kind\": \"Name\",\n                            \"value\": \"BlockChangedFilter\"\n                        }\n                    },\n                    \"directives\": []\n                },\n                {\n                    \"kind\": \"InputValueDefinition\",\n                    \"name\": {\n                        \"kind\": \"Name\",\n                        \"value\": \"and\"\n                    },\n                    \"type\": {\n                        \"kind\": \"ListType\",\n                        \"type\": {\n                            \"kind\": \"NamedType\",\n                            \"name\": {\n                                \"kind\": \"Name\",\n                                \"value\": \"startedCoinfFlip_filter\"\n                            }\n                        }\n                    },\n                    \"directives\": []\n                },\n                {\n                    \"kind\": \"InputValueDefinition\",\n                    \"name\": {\n                        \"kind\": \"Name\",\n                        \"value\": \"or\"\n                    },\n                    \"type\": {\n                        \"kind\": \"ListType\",\n                        \"type\": {\n                            \"kind\": \"NamedType\",\n                            \"name\": {\n                                \"kind\": \"Name\",\n                                \"value\": \"startedCoinfFlip_filter\"\n                            }\n                        }\n                    },\n                    \"directives\": []\n                }\n            ],\n            \"directives\": []\n        },\n        {\n            \"kind\": \"EnumTypeDefinition\",\n            \"name\": {\n                \"kind\": \"Name\",\n                \"value\": \"startedCoinfFlip_orderBy\"\n            },\n            \"values\": [\n                {\n                    \"kind\": \"EnumValueDefinition\",\n                    \"name\": {\n                        \"kind\": \"Name\",\n                        \"value\": \"id\"\n                    },\n                    \"directives\": []\n                },\n                {\n                    \"kind\": \"EnumValueDefinition\",\n                    \"name\": {\n                        \"kind\": \"Name\",\n                        \"value\": \"theCoinFlipID\"\n                    },\n                    \"directives\": []\n                },\n                {\n                    \"kind\": \"EnumValueDefinition\",\n                    \"name\": {\n                        \"kind\": \"Name\",\n                        \"value\": \"blockNumber\"\n                    },\n                    \"directives\": []\n                },\n                {\n                    \"kind\": \"EnumValueDefinition\",\n                    \"name\": {\n                        \"kind\": \"Name\",\n                        \"value\": \"blockTimestamp\"\n                    },\n                    \"directives\": []\n                },\n                {\n                    \"kind\": \"EnumValueDefinition\",\n                    \"name\": {\n                        \"kind\": \"Name\",\n                        \"value\": \"transactionHash\"\n                    },\n                    \"directives\": []\n                }\n            ],\n            \"directives\": []\n        }\n    ]\n};\n/* harmony default export */ __webpack_exports__[\"default\"] = ((0,graphql__WEBPACK_IMPORTED_MODULE_0__.buildASTSchema)(schemaAST, {\n    assumeValid: true,\n    assumeValidSDL: true\n}));\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevExports = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports on update so we can compare the boundary\n                // signatures.\n                module.hot.dispose(function (data) {\n                    data.prevExports = currentExports;\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevExports !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevExports !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./.graphclient/sources/Ether-Coin-Flip/introspectionSchema.ts\n"));

/***/ })

}]);